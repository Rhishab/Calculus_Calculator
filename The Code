#include <stirng>
using namespace std
#include <iostream>

class Stack {
private:
    int top;
    int arr[5];
public:
    Stack() {
        top = -1;
        for (int i = 0;i < 5;i++) {
            arr[i] = 0;

        }
    }
    bool isEmpty() {
        if (top == -1) {
            return false;
        else
            return true;
        }
    }

    bool isFull() {
        if (top == 4) {
            return true;
        }
        else
            return false;
    }

    void push(int val) {
        if (isFull()) {
            cout << "Stack Overflow" << endl;

        }
        else {
            top++;
            arr[top] = val;
        }

    }

    int pop() {
        if (isEmpty()) {
            cout << "Stack Underflow" << endl;

        }
        else {
            int popValue = arr[top];
            arr[top] = 0;
            top--;
            return popValue;
        }
    }

    void display() {
        cout << " Stack Elements"<<endl;
        for (i = 4;i >= 0;i--) {
            cout << arr[i] << endl;
        }

    }
        

    

};

int main()
{
    Stack s1;
    int optioin, position, value;
    do {
        cout << "What operation do you want to perform? Select Option number. Enter 0 to exit." << endl;
        cout << "1. Push()" << endl;
        cout << "2. Pop()" << endl;
        cout << "3. isEmpty()" << endl;
        cout << "4. isFull()" << endl;
        cout << "5. Display()" <<endl;
        cin >> option;
        switch (option) {
        case 0:
            break;
        case 1:
            cout << "Enter tem you want to push" << endl;
            cin >> value;
            s1.push(value);
            break;
        case 2:
            s1.pop();
            cout << "Function Pop() initiated" << endl;
            break;
        case 3:
            if (s1.isEmpty()) {
                cout << "Stack is Empty<<endl"
                      }
            else {
                cout << "Stack is not Empty" << endl;
            }
            case 4;
                if (isFull()) {
                    cout << "Stack is full" << endl;
                }
                else {
                    cout << "Stack is not Full" << endl;
                }
            case 5:
                s1.display();


        }
    } while (option != 0);

    return 0;
}


